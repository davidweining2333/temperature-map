{"version":3,"sources":["views/map/Map.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","Map","props","state","dataSource","key","name","lang","lat","columns","title","dataIndex","this","map","center","crs","CRS","EPSG3857","zoom","layers","tileLayer","attribution","forEach","item","marker","addTo","markerPosition","className","size","id","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVASIA,G,cAAcC,IAAEC,KAAK,CACrBC,QAASD,IACTE,UAAWC,OAEfJ,IAAEK,OAAOC,UAAUC,QAAQN,KAAOF,E,IAwFnBS,E,kDAtFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,CACR,CACIC,IAAK,KACLC,KAAM,eACNC,KAAM,aACNC,IAAK,aAET,CACIH,IAAK,KACLC,KAAM,eACNC,KAAM,SACNC,IAAK,SAET,CACIH,IAAK,KACLC,KAAM,eACNC,KAAM,cACNC,IAAK,eAGbC,QAAS,CACL,CACIC,MAAO,eACPC,UAAW,OACXN,IAAK,QAET,CACIK,MAAO,eACPC,UAAW,OACXN,IAAK,QAET,CACIK,MAAO,eACPC,UAAW,MACXN,IAAK,SArCF,E,gEA0CE,IAAD,OAEhBO,KAAKC,IAAMpB,IAAEoB,IAAI,MAAO,CACpBC,OAAQ,CAAC,UAAW,YACpBC,IAAKtB,IAAEuB,IAAIC,SACXC,KAAM,GACNC,OAAQ,CACJ1B,IAAE2B,UAAU,0CAA2C,CACnDC,YAAa,gFASzBT,KAAKT,MAAMC,WAAWkB,SAAQ,SAAAC,GAC1B9B,IAAE+B,OAAO,CAACD,EAAKf,IAAKe,EAAKhB,OAAOkB,MAAM,EAAKZ,U,4CAQZ,EAAlBa,iB,+BAQjB,OAAO,sBAAKC,UAAU,OAAf,UACH,sBAAKA,UAAU,oBAAf,UACI,0DACA,cAAC,IAAD,CAAOvB,WAAYQ,KAAKT,MAAMC,WAAYK,QAASG,KAAKT,MAAMM,QAASmB,KAAK,aAEhF,qBAAKC,GAAG,e,GAlFFC,IAAMC,WCNTC,EANH,kBACR,qBAAKL,UAAU,MAAf,SACI,cAAC,EAAD,OCQOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7661dba.chunk.js","sourcesContent":["import React from 'react';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport './Map.less';\nimport 'leaflet/dist/leaflet.css';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nclass Map extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [\n                {\n                    key: 'cd',\n                    name: '成都',\n                    lang: '104.071887',\n                    lat: '30.662205'\n                },\n                {\n                    key: 'bj',\n                    name: '北京',\n                    lang: '116.46',\n                    lat: '39.92'\n                },\n                {\n                    key: 'sh',\n                    name: '上海',\n                    lang: '121.4737021',\n                    lat: '31.2303904'\n                }\n            ],\n            columns: [\n                {\n                    title: '名称',\n                    dataIndex: 'name',\n                    key: 'name',\n                },\n                {\n                    title: '经度',\n                    dataIndex: 'lang',\n                    key: 'lang',\n                },\n                {\n                    title: '纬度',\n                    dataIndex: 'lat',\n                    key: 'lat',\n                }\n            ]\n        }\n    }\n    componentDidMount() {\n        // create map\n        this.map = L.map('map', {\n            center: [30.662205, 104.071887],\n            crs: L.CRS.EPSG3857,\n            zoom: 14,\n            layers: [\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                }),\n            ]\n        });\n\n        // add marker\n        // this.marker = L.marker([30.662205, 104.071887], {\n\n        // }).addTo(this.map);\n        this.state.dataSource.forEach(item => {\n            L.marker([item.lat, item.lang]).addTo(this.map)\n        });\n        // // add layer\n        // this.layer = L.layerGroup().addTo(this.map);\n        // this.map.setView(\n        //     center, zoom\n        // )\n    }\n    componentDidUpdate({ markerPosition }) {\n        // check if position has changed \n        // if (this.props.markerPosition !== markerPosition) {\n        //     this.marker.setLatLng(this.props.markerPosition);\n        // }\n    }\n    render() {\n\n        return <div className=\"body\">\n            <div className=\"markes-table-area\">\n                <h4>位置列表</h4>\n                <Table dataSource={this.state.dataSource} columns={this.state.columns} size=\"small\" />\n            </div>\n            <div id=\"map\"></div>\n        </div>\n    }\n}\n\nexport default Map;","import './App.less';\nimport Map from \"./views/map/Map\"\nconst App = () => (\n    <div className=\"App\">\n        <Map></Map>\n    </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}